{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\Swanandi Projects\\\\market_intelligence_platform.1\\\\client\\\\src\\\\components\\\\ForecastMethodInfo.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfoCard = styled.div`\n  margin-top: 15px;\n  padding: 15px;\n  background-color: rgba(74, 111, 165, 0.1);\n  border-radius: 8px;\n  border-left: 4px solid #4a6fa5;\n`;\n_c = InfoCard;\nconst methodInfo = {\n  moving_average: {\n    title: \"Moving Average\",\n    description: \"Smooths out short-term fluctuations and highlights longer-term trends by averaging data points over a specified window.\",\n    best_for: \"Stable markets with consistent patterns\"\n  },\n  linear_regression: {\n    title: \"Linear Regression\",\n    description: \"Identifies a linear trend in historical data and projects it into the future.\",\n    best_for: \"Trending markets with steady growth/decline\"\n  },\n  exponential_smoothing: {\n    title: \"Exponential Smoothing\",\n    description: \"Gives more weight to recent observations while not discarding older observations entirely.\",\n    best_for: \"Markets with changing trends but no seasonality\"\n  },\n  seasonal_naive: {\n    title: \"Seasonal Naive\",\n    description: \"Uses values from previous seasons as forecasts, assuming patterns will repeat.\",\n    best_for: \"Highly seasonal markets with repeating patterns\"\n  }\n};\nfunction ForecastMethodInfo({\n  method\n}) {\n  const info = methodInfo[method] || methodInfo.moving_average;\n  return /*#__PURE__*/_jsxDEV(InfoCard, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [info.title, \" Method\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: info.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Best for:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }, this), \" \", info.best_for]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ForecastMethodInfo;\nexport default ForecastMethodInfo;\nvar _c, _c2;\n$RefreshReg$(_c, \"InfoCard\");\n$RefreshReg$(_c2, \"ForecastMethodInfo\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","InfoCard","div","_c","methodInfo","moving_average","title","description","best_for","linear_regression","exponential_smoothing","seasonal_naive","ForecastMethodInfo","method","info","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["D:/Documents/Swanandi Projects/market_intelligence_platform.1/client/src/components/ForecastMethodInfo.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst InfoCard = styled.div`\r\n  margin-top: 15px;\r\n  padding: 15px;\r\n  background-color: rgba(74, 111, 165, 0.1);\r\n  border-radius: 8px;\r\n  border-left: 4px solid #4a6fa5;\r\n`;\r\n\r\nconst methodInfo = {\r\n  moving_average: {\r\n    title: \"Moving Average\",\r\n    description: \"Smooths out short-term fluctuations and highlights longer-term trends by averaging data points over a specified window.\",\r\n    best_for: \"Stable markets with consistent patterns\"\r\n  },\r\n  linear_regression: {\r\n    title: \"Linear Regression\",\r\n    description: \"Identifies a linear trend in historical data and projects it into the future.\",\r\n    best_for: \"Trending markets with steady growth/decline\"\r\n  },\r\n  exponential_smoothing: {\r\n    title: \"Exponential Smoothing\",\r\n    description: \"Gives more weight to recent observations while not discarding older observations entirely.\",\r\n    best_for: \"Markets with changing trends but no seasonality\"\r\n  },\r\n  seasonal_naive: {\r\n    title: \"Seasonal Naive\",\r\n    description: \"Uses values from previous seasons as forecasts, assuming patterns will repeat.\",\r\n    best_for: \"Highly seasonal markets with repeating patterns\"\r\n  }\r\n};\r\n\r\nfunction ForecastMethodInfo({ method }) {\r\n  const info = methodInfo[method] || methodInfo.moving_average;\r\n  \r\n  return (\r\n    <InfoCard>\r\n      <h4>{info.title} Method</h4>\r\n      <p>{info.description}</p>\r\n      <p><strong>Best for:</strong> {info.best_for}</p>\r\n    </InfoCard>\r\n  );\r\n}\r\n\r\nexport default ForecastMethodInfo;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGH,MAAM,CAACI,GAAG;AAC3B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,QAAQ;AAQd,MAAMG,UAAU,GAAG;EACjBC,cAAc,EAAE;IACdC,KAAK,EAAE,gBAAgB;IACvBC,WAAW,EAAE,yHAAyH;IACtIC,QAAQ,EAAE;EACZ,CAAC;EACDC,iBAAiB,EAAE;IACjBH,KAAK,EAAE,mBAAmB;IAC1BC,WAAW,EAAE,+EAA+E;IAC5FC,QAAQ,EAAE;EACZ,CAAC;EACDE,qBAAqB,EAAE;IACrBJ,KAAK,EAAE,uBAAuB;IAC9BC,WAAW,EAAE,4FAA4F;IACzGC,QAAQ,EAAE;EACZ,CAAC;EACDG,cAAc,EAAE;IACdL,KAAK,EAAE,gBAAgB;IACvBC,WAAW,EAAE,gFAAgF;IAC7FC,QAAQ,EAAE;EACZ;AACF,CAAC;AAED,SAASI,kBAAkBA,CAAC;EAAEC;AAAO,CAAC,EAAE;EACtC,MAAMC,IAAI,GAAGV,UAAU,CAACS,MAAM,CAAC,IAAIT,UAAU,CAACC,cAAc;EAE5D,oBACEL,OAAA,CAACC,QAAQ;IAAAc,QAAA,gBACPf,OAAA;MAAAe,QAAA,GAAKD,IAAI,CAACR,KAAK,EAAC,SAAO;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BnB,OAAA;MAAAe,QAAA,EAAID,IAAI,CAACP;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBnB,OAAA;MAAAe,QAAA,gBAAGf,OAAA;QAAAe,QAAA,EAAQ;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACL,IAAI,CAACN,QAAQ;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEf;AAACC,GAAA,GAVQR,kBAAkB;AAY3B,eAAeA,kBAAkB;AAAC,IAAAT,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}